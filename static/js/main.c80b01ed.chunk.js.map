{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["inventory","name","price","image","Cart","_this","this","cart","props","length","react_default","a","createElement","className","cartItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","value","parseInt","push","key","onClick","removeFromCart","err","return","alert","React","Component","Product","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","item","_this3","src","addToCart","Ecommerce","_this4","favourites","inCheckout","filterText","bind","assertThisInitialized","handleFilterTextChange","clearFilterText","event","setState","target","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","newCart","unshift","i","splice","prodList","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","toUpperCase","includes","App_Product","type","placeholder","onChange","App_Cart","App","App_Ecommerce","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c80b01ed.chunk.js","sourcesContent":["import React from 'react';\n\nconst inventory = [\n    {\n        name: \"Dog\",\n        price: \"100\",\n        image: \"dog.png\"\n    },\n    {\n        name: \"Book\",\n        price: \"5\",\n        image: \"book.png\"\n    },\n    {\n        name: \"JavaScript\",\n        price: \"69\",\n        image: \"js.png\"\n    },\n    {\n        name: \"Python\",\n        price: \"0\",\n        image: \"python.png\"\n    },\n    {\n        name: \"CRUx President Post\",\n        price: \"599\",\n        image: \"crux.png\"\n    },\n    {\n        name: \"BITS Pilani\",\n        price: \"4000000\",\n        image: \"bits.png\"\n    },\n    {\n        name: \"Laptop\",\n        price: \"999\",\n        image: \"laptop.png\"\n    },\n    {\n        name: \"Orange\",\n        price: \"20\",\n        image: \"orange.png\"\n    },\n    {\n        name: \"Nirma Detergent\",\n        price: \"10\",\n        image: \"nirma.png\"\n    },\n    {\n        name: \"Maggi\",\n        price: \"1\",\n        image: \"maggi.png\"\n    },\n]\n\n\n\nclass Cart extends React.Component {\n\n\n    render() {\n        var cart = this.props.cart\n        if (cart.length === 0) {\n            return (\n                <div className=\"cart\">\n                    You do not have any items in your cart.\n                </div>\n            )\n        }\n\n        var cartItems = [];\n        var price = 0;\n        for (var element of cart) {\n            price += parseInt(element.price);\n            cartItems.push(\n                <div className=\"cart-item\" key={element.name}>\n                    <b>{element.name} </b>\n                    <span>$ {element.price}</span>\n                    <br />\n                    <button onClick={() => { this.props.removeFromCart(element) }}>Remove</button>\n                </div>\n            )\n        }\n        return (\n            <div className=\"cart\">\n                <h2>Cart</h2>\n                <p>You have {cart.length} item(s) in cart.</p>\n                <div>\n                    {cartItems}\n                </div>\n                <hr></hr>\n                <div>\n                    Total Cost of Items : ${price}\n                </div>\n                <br></br>\n                <button className=\"checkout\" onClick={() => { alert(`Thank you for shopping with us.`) }}>Checkout</button>\n            </div>\n        )\n\n    }\n}\n\n\nclass Product extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: props.item.name,\n            price: props.item.price,\n            image: props.item.image\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"row product\">\n                <div className=\"col-md-4 text-center\">\n                    <img src={`img/` + this.state.image} className=\"product-image\" />\n                </div>\n                <div className=\"col-md-8\">\n                    <h3>{this.state.name}</h3>\n                    <p>$ {this.state.price}</p>\n                    <button onClick={() => { this.props.addToCart(this.props.item) }}>Add to Cart</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nclass Ecommerce extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inventory: props.inventory,\n            cart: [],\n            favourites: [],\n            inCheckout: false,\n            filterText: \"\"\n        }\n        this.addToCart = this.addToCart.bind(this);\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n        this.removeFromCart = this.removeFromCart.bind(this);\n        this.clearFilterText = this.clearFilterText.bind(this)\n\n    }\n\n\n    handleFilterTextChange(event) {\n        this.setState({\n            filterText: event.target.value\n        })\n    }\n\n    clearFilterText() {\n        this.setState({\n            filterText: \"\"\n        })\n    }\n\n    addToCart(item) {\n        for (var element of this.state.cart) {\n            if (element.name == item.name) {\n                alert(\"Item is already present in your cart.\")\n                return;\n            }\n        }\n\n        const newCart = this.state.cart;\n        newCart.unshift(item);\n        this.setState({\n            cart: newCart,\n        })\n\n    }\n\n    removeFromCart(item) {\n        var newCart = this.state.cart;\n        for (var i = 0; i < newCart.length; i++) {\n            if (newCart[i].name == item.name) {\n                newCart.splice(i, 1);\n                this.setState({\n                    cart: newCart,\n                })\n                return;\n            }\n        }\n    }\n\n    render() {\n        if (!this.state.inCheckout) {\n            var prodList = [];\n            for (var element of this.state.inventory) {\n                if (element.name.toUpperCase().includes(this.state.filterText.toUpperCase())) {\n                    prodList.push(\n                        <Product item={element} addToCart={this.addToCart} key={element.name} />\n                    )\n                }\n\n            }\n            return (\n                <div className=\"row\">\n\n                    <div className=\"col-md-8\">\n                        <div className=\"row search\">\n                            <input className=\"searchbox col-md-10\" type=\"search\" placeholder=\"Filter Items\" value={this.state.filterText} onChange={this.handleFilterTextChange} />\n                            <button className=\"col-md-2\" onClick={this.clearFilterText}>Clear</button>\n                        </div>\n                        {prodList}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <Cart cart={this.state.cart} removeFromCart={this.removeFromCart} />\n                    </div>\n\n                </div>\n            )\n        }\n    }\n\n}\n\nfunction App() {\n    return (\n        <div className=\"main\">\n            <h1 className=\"text-center\">Ye Olde Ecommerce Shop</h1>\n            <Ecommerce inventory={inventory} />\n\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './bootstrap-grid.min.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}